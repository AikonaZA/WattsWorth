// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WattsWorth.Infrastructure.Data;
using WattsWorth.Infrastructure.Repositories;

#nullable disable

namespace WattsWorth.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241027131120_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("WattsWorth.Core.Entities.ElectricityPurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("TEXT");

                    b.Property<int>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitsPurchased")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("ElectricityPurchases");
                });

            modelBuilder.Entity("WattsWorth.Core.Entities.PayBracket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxUnits")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PayBrackets");
                });

            modelBuilder.Entity("WattsWorth.Core.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("HourDifference")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MinuteDifference")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitDifference")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Units")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitsPerHour")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WattsWorth.Core.Entities.ElectricityPurchase", b =>
                {
                    b.HasOne("WattsWorth.Core.Entities.Transaction", "Transaction")
                        .WithOne("ElectricityPurchase")
                        .HasForeignKey("WattsWorth.Core.Entities.ElectricityPurchase", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("WattsWorth.Core.Entities.Transaction", b =>
                {
                    b.Navigation("ElectricityPurchase")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
